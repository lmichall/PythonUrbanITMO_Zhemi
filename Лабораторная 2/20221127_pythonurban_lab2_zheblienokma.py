# -*- coding: utf-8 -*-
"""20221127_PythonUrban_lab2_ZheblienokMA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nxQDD76vjatNNIBiULOZPTuAhBQItcHp

# Итоговый проект. Улицы. Объекты культурного наследия.
"""

!pip install geopandas
!pip install osmnx
!pip install mapclassify
!pip install transliterate

import pandas as pd
import numpy as np
import geopandas as gpd
import osmnx as ox
import transliterate
import datetime

TILES = "CartoDB positron"
CITY = 'Санкт-Петербург'
DISTRICT_NAME = 'Московский район'
# район Санкт-Петербург из OSM https://wiki.openstreetmap.org/wiki/RU:%D0%A1%D0%B0%D0%BD%D0%BA%D1%82-%D0%9F%D0%B5%D1%82%D0%B5%D1%80%D0%B1%D1%83%D1%80%D0%B3/%D0%A0%D0%B0%D0%B9%D0%BE%D0%BD%D1%8B
TERRITORY_NAME = f'{DISTRICT_NAME}, {CITY}'
TRANSLIT_CITY = transliterate.translit(CITY, reversed=True).lower().replace(' ', '')
TRANSLIT_DISTRICT_NAME = transliterate.translit(DISTRICT_NAME, reversed=True).lower().replace(' ', '')

TIME = datetime.datetime.now() + datetime.timedelta(hours=3)
TIMESTAMP = TIME.strftime('%Y%m%d_%H%M')

KGIOP_FILE_URL = "https://raw.githubusercontent.com/lmichall/PythonUrbanITMO_Zhemi/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/kgiop_objects.geojson"
STREETS_FILE_URL = "https://raw.githubusercontent.com/lmichall/PythonUrbanITMO_Zhemi/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/streets.geojson"

"""## Территория

### Загрузка территории из OSM (Extract)
"""

district = ox.geocode_to_gdf(TERRITORY_NAME)

district.explore(tiles=TILES)

"""## Улицы

### Загрузка файла с улицами (Extract)
"""

gdf_street = gpd.read_file(STREETS_FILE_URL, mask=district)

display(gdf_street)
gdf_street.explore(tiles=TILES)

"""### Обработка данных с улицами (Transform)"""

print(f'количество объектов в датафрейме: {len(gdf_street)}')
gdf_street["name"].is_unique

gdf_street["name"] = gdf_street["name"].str.lower()

gdf_street

gdf_street = gdf_street.dissolve(by="name")

print(f'количество объектов в датафрейме: {len(gdf_street)}')

"""### Сохранение слоя с улицами (Load)"""

gdf_street.index.names = ['Название улиц']

gdf_street

gdf_street.info()

save_name_street = f'{TIMESTAMP}_{TRANSLIT_CITY}_{TRANSLIT_DISTRICT_NAME}_streets.geojson'

gdf_street.to_crs(4326).to_file(save_name_street, driver='GeoJSON')
print(f'Файл - {save_name_street} - успешно записан')

"""## Объекты культурного наследия

### Загрузка объектов культурного наследия (Extract)
"""

gdf_kgiop = gpd.read_file(KGIOP_FILE_URL, mask=district)
display(gdf_kgiop.head())
gdf_kgiop.explore(tiles=TILES)

gdf_kgiop.info()

"""### Работа с дубликатами"""

gdf_kgiop.duplicated().value_counts() # полных дублирующих записей не обнаружено

gdf_kgiop[gdf_kgiop.duplicated(subset=["object_name", "object_location", "geometry"], keep=False)] # поиск дубликатов по набору основных столбцов - не обнаружено

"""### Обработка объектов культурного наследия (Transform)"""

gdf_kgiop["lon"] = gdf_kgiop.to_crs(3857).geometry.centroid.to_crs(4326).x
gdf_kgiop["lat"] = gdf_kgiop.to_crs(3857).geometry.centroid.to_crs(4326).y

"""### Сохранение слоя с объектами культурного наследия (Load)"""

gdf_kgiop.columns # вызываем наименования колонок, чтобы добавить в rename_columns

rename_columns = {
    "id": "Идентификатор",
    "ensemble_name": "Комплексное наименование",
    "object_name": "Наименование объекта",
    "occurrence_time": "Дата создания",
    "object_location": "Адрес",
    "historical_category": "Категория",
    "normative_act": "Устанавливающий нормативный акт",
    "object_type": "Тип объекта",
    "geometry": "geometry",
    "lon": "Долгота",
    "lat": "Широта"
}
gdf_kgiop.rename(columns=rename_columns, inplace=True)

gdf_kgiop.info() # проверяем результат переименования

save_name_kgiop = f'{TIMESTAMP}_{TRANSLIT_CITY}_{TRANSLIT_DISTRICT_NAME}_kgiop.geojson'

gdf_kgiop.to_crs(4326).to_file(save_name_kgiop, driver='GeoJSON')
print(f'Файл - {save_name_kgiop} - успешно записан')

"""Ссылка на визуализацию в Кеплер - https://kepler.gl/demo/map?mapUrl=https://dl.dropboxusercontent.com/s/an3vlr372wiv4g0/keplergl_jekvrxr.json"""